# Byte-compiled / optimized / DLL files
LLaMA-Factory/__pycache__/
LLaMA-Factory/*.py[cod]
LLaMA-Factory/*$py.class

# C extensions
LLaMA-Factory/*.so

# Distribution / packaging
LLaMA-Factory/.Python
LLaMA-Factory/build/
LLaMA-Factory/develop-eggs/
LLaMA-Factory/dist/
LLaMA-Factory/downloads/
LLaMA-Factory/eggs/
LLaMA-Factory/data/*.jsonl
LLaMA-Factory/.eggs/
LLaMA-Factory/lib/
LLaMA-Factory/lib64/
LLaMA-Factory/parts/
LLaMA-Factory/sdist/
LLaMA-Factory/var/
LLaMA-Factory/wheels/
LLaMA-Factory/wandb/*
LLaMA-Factory/share/python-wheels/
LLaMA-Factory/*.egg-info/
LLaMA-Factory/.installed.cfg
LLaMA-Factory/*.egg
LLaMA-Factory/NIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
LLaMA-Factory/*.manifest
LLaMA-Factory/*.spec

# Installer logs
LLaMA-Factory/pip-log.txt
LLaMA-Factory/pip-delete-this-directory.txt

# Unit test / coverage reports
LLaMA-Factory/htmlcov/
LLaMA-Factory/.tox/
LLaMA-Factory/.nox/
LLaMA-Factory/.coverage
LLaMA-Factory/.coverage.*
LLaMA-Factory/.cache
LLaMA-Factory/nosetests.xml
LLaMA-Factory/verage.xml
LLaMA-Factory/*.cover
LLaMA-Factory/*.py,cover
LLaMA-Factory/.hypothesis/
LLaMA-Factory/.pytest_cache/
LLaMA-Factory/ver/

# Translations
LLaMA-Factory/*.mo
LLaMA-Factory/*.pot

# Django stuff:
LLaMA-Factory/*.log
LLaMA-Factory/local_settings.py
LLaMA-Factory/db.sqlite3
LLaMA-Factory/db.sqlite3-journal

# Flask stuff:
LLaMA-Factory/instance/
LLaMA-Factory/.webassets-cache

# Scrapy stuff:
LLaMA-Factory/.scrapy

# Sphinx documentation
LLaMA-Factory/docs/_build/

# PyBuilder
LLaMA-Factory/.pybuilder/
LLaMA-Factory/get/

# Jupyter Notebook
LLaMA-Factory/.ipynb_checkpoints

# IPython
LLaMA-Factory/profile_default/
LLaMA-Factory/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
LLaMA-Factory/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
LLaMA-Factory/__pypackages__/

# Celery stuff
LLaMA-Factory/elerybeat-schedule
LLaMA-Factory/elerybeat.pid

# SageMath parsed files
LLaMA-Factory/*.sage.py

# Environments
LLaMA-Factory/.env
LLaMA-Factory/.venv
LLaMA-Factory/env/
LLaMA-Factory/venv/
LLaMA-Factory/ENV/
LLaMA-Factory/env.bak/
LLaMA-Factory/venv.bak/

# Spyder project settings
LLaMA-Factory/.spyderproject
LLaMA-Factory/.spyproject

# Rope project settings
LLaMA-Factory/.ropeproject

# mkdocs documentation
LLaMA-Factory/site

# mypy
LLaMA-Factory/.mypy_cache/
LLaMA-Factory/.dmypy.json
LLaMA-Factory/dmypy.json

# Pyre type checker
LLaMA-Factory/.pyre/

# pytype static type analyzer
LLaMA-Factory/.pytype/

# Cython debug symbols
LLaMA-Factory/hon_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
LLaMA-Factory/.idea/

# custom .gitignore
LLaMA-Factory/user.config
LLaMA-Factory/saves/
LLaMA-Factory/he/
LLaMA-Factory/data/bn*
LLaMA-Factory/data/skypile*
LLaMA-Factory/data/is*
LLaMA-Factory/data/slim*
LLaMA-Factory/data/ultra*
LLaMA-Factory/data/comp*
LLaMA-Factory/data/belle*
LLaMA-Factory/data/hh*
LLaMA-Factory/data/oaa*
LLaMA-Factory/data/alpaca*
LLaMA-Factory/data/c4*
LLaMA-Factory/data/example*
LLaMA-Factory/data/lima*
LLaMA-Factory/data/gla*
LLaMA-Factory/data/opus100*
LLaMA-Factory/data/*.jsonl
LLaMA-Factory/llama-pt/ckpts
# Byte-compiled / optimized / DLL files
peft/__pycache__/
peft/*.py[cod]
peft/*$py.class

# C extensions
peft/*.so

# Distribution / packaging
peft/.Python
peft/build/
peft/develop-eggs/
peft/dist/
peft/downloads/
peft/ggs/
peft/.eggs/
peft/lib/
peft/lib64/
peft/arts/
peft/sdist/
peft/var/
peft/wheels/
peft/ip-wheel-metadata/
peft/share/python-wheels/
peft/*.egg-info/
peft/.installed.cfg
peft/*.egg
peft/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
peft/*.manifest
peft/*.spec

# Installer logs
peft/ip-log.txt
peft/ip-delete-this-directory.txt

# Unit test / coverage reports
peft/htmlcov/
peft/.tox/
peft/.nox/
peft/.coverage
peft/.coverage.*
peft/.cache
peft/nosetests.xml
peft/coverage.xml
peft/*.cover
peft/*.py,cover
peft/.hypothesis/
peft/.pytest_cache/

# Translations
peft/*.mo
peft/*.pot

# Django stuff:
peft/*.log
peft/local_settings.py
peft/db.sqlite3
peft/db.sqlite3-journal

# Flask stuff:
peft/instance/
peft/.webassets-cache

# Scrapy stuff:
peft/.scrapy

# Sphinx documentation
peft/docs/_build/

# PyBuilder
peft/arget/

# Jupyter Notebook
peft/.ipynb_checkpoints

# IPython
peft/rofile_default/
peft/ipython_config.py

# pyenv
peft/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
peft/__pypackages__/

# Celery stuff
peft/celerybeat-schedule
peft/celerybeat.pid

# SageMath parsed files
peft/*.sage.py

# Environments
peft/.env
peft/.venv
peft/nv/
peft/venv/
peft/ENV/
peft/nv.bak/
peft/venv.bak/

# Spyder project settings
peft/.spyderproject
peft/.spyproject

# Rope project settings
peft/.ropeproject

# mkdocs documentation
peft/site

# mypy
peft/.mypy_cache/
peft/.dmypy.json
peft/dmypy.json

# Pyre type checker
peft/.pyre/

# VSCode
peft/.vscode

# IntelliJ
peft/.idea

# Mac .DS_Store
peft/.DS_Store

# More test things
peft/wandb

# Initially taken from Github's Python gitignore file

# Byte-compiled / optimized / DLL files
transformers/__pycache__/
transformers/*.py[cod]
transformers/*$py.class

# C extensions
transformers/*.so

# tests and logs
transformers/ixtures/cached_*_text.txt
transformers/logs/
transformers/lightning_logs/
transformers/lang_code_data/

# Distribution / packaging
transformers/.Python
transformers/build/
transformers/develop-eggs/
transformers/dist/
transformers/downloads/
transformers/ggs/
transformers/.eggs/
transformers/lib/
transformers/lib64/
transformers/parts/
transformers/dist/
transformers/var/
transformers/wheels/
transformers/*.egg-info/
transformers/.installed.cfg
transformers/*.egg
transformers/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
transformers/*.manifest
transformers/*.spec

# Installer logs
transformers/pip-log.txt
transformers/pip-delete-this-directory.txt

# Unit test / coverage reports
transformers/htmlcov/
transformers/.tox/
transformers/.nox/
transformers/.coverage
transformers/.coverage.*
transformers/.cache
transformers/.xml
transformers/coverage.xml
transformers/*.cover
transformers/.hypothesis/
transformers/.pytest_cache/

# Translations
transformers/*.mo
transformers/*.pot

# Django stuff:
transformers/*.log
transformers/local_settings.py
transformers/db.sqlite3

# Flask stuff:
transformers/instance/
transformers/.webassets-cache

# Scrapy stuff:
transformers/.scrapy

# Sphinx documentation
transformers/docs/_build/

# PyBuilder
transformers/get/

# Jupyter Notebook
transformers/.ipynb_checkpoints

# IPython
transformers/profile_default/
transformers/ipython_config.py

# pyenv
transformers/.python-version

# celery beat schedule file
transformers/celerybeat-schedule

# SageMath parsed files
transformers/*.sage.py

# Environments
transformers/.env
transformers/.venv
transformers/v/
transformers/venv/
transformers/ENV/
transformers/v.bak/
transformers/venv.bak/

# Spyder project settings
transformers/.spyderproject
transformers/.spyproject

# Rope project settings
transformers/.ropeproject

# mkdocs documentation
transformers/ite

# mypy
transformers/.mypy_cache/
transformers/.dmypy.json
transformers/dmypy.json

# Pyre type checker
transformers/.pyre/

# vscode
transformers/.vs
transformers/.vscode

# Pycharm
transformers/.idea

# TF code
transformers/low_code

# Models
transformers/proc_data

# examples
transformers/uns
transformers/uns_old
transformers/wandb
transformers/xamples/runs
transformers/xamples/**/*.args
transformers/xamples/rag/sweep

# data
transformers/data
transformers/ialization_dir

# emacs
transformers/*.*~
transformers/debug.env

# vim
transformers/.*.swp

#ctags
transformers/gs

# pre-commit
transformers/.pre-commit*

# .lock
transformers/*.lock

# DS_Store (MacOS)
transformers/.DS_Store

# ruff
transformers/.ruff_cache
